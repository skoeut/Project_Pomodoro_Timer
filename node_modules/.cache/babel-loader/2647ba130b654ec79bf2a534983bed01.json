{"ast":null,"code":"var _jsxFileName = \"/Users/sanyakoeut/Desktop/React_Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js\";\nimport React from 'react';\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nfunction ProgressBar({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimeRunning\n}) {\n  //const start = session?.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60;\n  const percentage = 100 * (1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / start);\n  return session && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, session.label, \" for \", minutesToDuration(session.label === 'On Break' ? breakDuration : focusDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, secondsToDuration(session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \" \", !isTimeRunning ? 'PAUSED' : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressBarIncrease() // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${progressBarIncrease()}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/sanyakoeut/Desktop/React_Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","secondsToDuration","minutesToDuration","ProgressBar","session","focusDuration","breakDuration","isTimeRunning","percentage","timeRemaining","start","label","height","progressBarIncrease","width"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAArB,EAA6E;AAE3E;AACA,QAAMC,UAAU,GAAG,OAAO,IAAG,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,aAAT,IAAyBC,KAAnC,CAAnB;AAEE,SACCN,OAAO,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,OAAO,CAACO,KADT,WACqBT,iBAAiB,CAACE,OAAO,CAACO,KAAR,KAAkB,UAAlB,GAA+BL,aAA/B,GAA+CD,aAAhD,CADtC,aAFA,eAMA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,iBAAiB,CAACG,OAAO,CAACK,aAAT,CADtB,eANA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAM,CAACF,aAAD,GAAiB,QAAjB,GAA4B,IAAlC,CATA,CADA,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,cADV;AAEA,IAAA,IAAI,EAAC,aAFL;AAGA,qBAAc,GAHd;AAIA,qBAAc,KAJd;AAKA,qBAAeC,mBAAmB,EALlC,CAKsC;AALtC;AAMA,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAED,mBAAmB,EAAG;AAAlC,KANP,CAM+C;AAN/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CADA,CAdJ,CAFA;AAgCH;;AAED,eAAeV,WAAf","sourcesContent":["\nimport React from 'react'\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nfunction ProgressBar({session, focusDuration, breakDuration, isTimeRunning}) {\n\n  //const start = session?.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60;\n  const percentage = 100 * (1 -session?.timeRemaining / start);\n  \n    return (\n     session &&\n    <div>\n        <div className=\"row mb-2\">\n        <div className=\"col\">\n        {/** TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        <h2 data-testid=\"session-title\">\n        {session.label} for {minutesToDuration(session.label === 'On Break' ? breakDuration : focusDuration)} minutes\n        </h2>\n        {/* TODO: Update message below correctly format the time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(session.timeRemaining)} remaining\n        </p>\n        <h1> {!isTimeRunning ? 'PAUSED' : null}</h1>\n        </div>\n        </div>\n        <div className=\"row mb-2\">\n        <div className=\"col\">\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow={progressBarIncrease()} // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: `${progressBarIncrease()}%` }} // TODO: Increase width % as elapsed time increases\n            />\n        </div>\n        </div>\n        </div>\n    </div>\n    )\n}\n\nexport default ProgressBar"]},"metadata":{},"sourceType":"module"}